# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "conplex-dti"
version = "0.1.13"
description = "Adapting protein language models and contrastive learning for DTI prediction."
readme = "README.md"
authors = ["samsledje <samsl@mit.edu>"]
license = "MIT"
repository = "https://github.com/samsledje/ConPLex"
homepage = "https://github.com/samsledje/ConPLex"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = ["protein language models", "contrastive learning", "drug target interaction", "DTI"]

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [ 
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
]

[tool.poetry.scripts]
# Entry points for the package https://python-poetry.org/docs/pyproject/#scripts
"conplex-dti" = "conplex_dti.__main__:main"

[tool.poetry.dependencies]
python = "^3.9"
pandas = "^1.3.5"
h5py = "^3.8.0"
tqdm = "^4.62"
scikit-learn = "^1.2.2"
pytorch_lightning = "^1.9.3"
torchmetrics = "^0.11.3"
wandb = "^0.13"
omegaconf = "^2.3.0"
rdkit = "^2022.9.5"
fair-esm = "^0.1.0"
transformers = "^4.26.1"
PyTDC = "^0.3.9"
typer = {extras = ["all"], version = "^0.4.0"}
rich = "^13.3.2"
numpy = "^1.25.1"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.1"
black = {version = "^23.1", allow-prereleases = true}
darglint = "^1.8.1"
isort = {extras = ["colors"], version = "^5.10.1"}
mypy = "^0.910"
mypy-extensions = "^0.4.3"
pre-commit = "^3.1.1"
pydocstyle = "^6.1.1"
pylint = "^2.11.1"
safety = "^2.3.5"
pyupgrade = "^3.3.1"
pytest = "^7.2.2"
coverage = "^7.2.1"
coverage-badge = "^1.1.0"
pytest-html = "^3.1.1"
pytest-cov = "^3.0.0"


[tool.poetry.group.docs.dependencies]
sphinx = "^6.2.1"
sphinx-rtd-theme = "^1.2.0"

[tool.poe.tasks]
install-ltt = "python3 -m pip install light-the-torch"
run-ltt = "python3 -m light_the_torch install --upgrade torch==1.13.1+cu116"
autoinstall-torch-cuda = ["install-ltt", "run-ltt"]

[tool.black]
# https://github.com/psf/black
target-version = ["py39"]
line-length = 88
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 39
line_length = 88
known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.9
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_errors = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "conplex-dti"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true
